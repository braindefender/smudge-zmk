#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
    behaviors {
        td0: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_0";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LSHFT>, <&kp CAPS>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
   &kp Y      &kp U        &kp I      &kp O     &kp P       &none           &none  &none  &none  &none  &none  &none
   &kp H      &kp J        &kp K      &kp L     &kp SEMI    &kp RET         &none  &none  &none  &none  &none  &none
   &kp N      &kp M        &kp COMMA  &kp DOT   &kp FSLH    &kp RBKT        &none  &none  &none  &none  &none  &none
   &td0       &lt 1 RALT   &kp EQUAL  &kp BSLH  &none       &kp BSPC        &none  &none  &none  &none  &none  &none
            >;
        };

        lower_layer {
            bindings = <
   &kp N6     &kp N7      &kp N8      &kp N9     &kp N0     &trans                     &trans &trans &trans &trans &trans &trans
   &kp SQT    &kp LEFT    &kp DOWN    &kp UP     &kp RIGHT  &trans                     &trans &trans &trans &trans &trans &trans
   &kp KP_N6  &kp KP_N7   &kp KP_N8   &kp KP_N9  &kp KP_N0  &trans                     &trans &trans &trans &trans &trans &trans
   &trans     &trans      &kp EQUAL   &kp BSLH   &trans     &mo 2                      &trans &trans &trans &trans &trans &trans
            >;
        };

        raise_layer {
            bindings = <
   &trans &trans &trans &trans &trans &trans                             &trans &trans &trans &trans &trans &trans
   &trans &trans &trans &trans &trans &bootloader                        &trans &trans &trans &trans &trans &trans
   &trans &trans &trans &trans &trans &trans                             &trans &trans &trans &trans &trans &trans
   &trans &trans &trans &trans &trans &trans                             &trans &trans &trans &trans &trans &trans
            >;
        };
    };
};
